// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Timetable.Db;

#nullable disable

namespace Timetable.Db.Migrations
{
    [DbContext(typeof(TimetableDbContext))]
    partial class DbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.13");

            modelBuilder.Entity("ActivitySlotDbPersonDb", b =>
                {
                    b.Property<int>("ActivitySlotsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PersonsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ActivitySlotsId", "PersonsId");

                    b.HasIndex("PersonsId");

                    b.ToTable("ActivitySlotDbPersonDb", (string)null);
                });

            modelBuilder.Entity("Timetable.Db.DbModels.ActivityDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Activities", (string)null);
                });

            modelBuilder.Entity("Timetable.Db.DbModels.ActivitySlotDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ActivityId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("INTEGER");

                    b.Property<TimeOnly>("From")
                        .HasColumnType("TEXT");

                    b.Property<int>("Period")
                        .HasColumnType("INTEGER");

                    b.Property<TimeOnly>("To")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.ToTable("ActivitySlots", (string)null);
                });

            modelBuilder.Entity("Timetable.Db.DbModels.PersonDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Persons", (string)null);
                });

            modelBuilder.Entity("ActivitySlotDbPersonDb", b =>
                {
                    b.HasOne("Timetable.Db.DbModels.ActivitySlotDb", null)
                        .WithMany()
                        .HasForeignKey("ActivitySlotsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Timetable.Db.DbModels.PersonDb", null)
                        .WithMany()
                        .HasForeignKey("PersonsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Timetable.Db.DbModels.ActivitySlotDb", b =>
                {
                    b.HasOne("Timetable.Db.DbModels.ActivityDb", "Activity")
                        .WithMany("ActivitySlots")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Activity");
                });

            modelBuilder.Entity("Timetable.Db.DbModels.ActivityDb", b =>
                {
                    b.Navigation("ActivitySlots");
                });
#pragma warning restore 612, 618
        }
    }
}
